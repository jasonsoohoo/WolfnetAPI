// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WolfnetAPI.Data;

#nullable disable

namespace WolfnetAPI.Migrations
{
    [DbContext(typeof(MatchDbContext))]
    [Migration("20250118074802_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CompetitionTeam", b =>
                {
                    b.Property<int>("CompetitionsId")
                        .HasColumnType("integer");

                    b.Property<string>("TeamsNumber")
                        .HasColumnType("text");

                    b.HasKey("CompetitionsId", "TeamsNumber");

                    b.HasIndex("TeamsNumber");

                    b.ToTable("CompetitionTeam");
                });

            modelBuilder.Entity("WolfnetAPI.Models.Competition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Competition");
                });

            modelBuilder.Entity("WolfnetAPI.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BlueOneNumber")
                        .HasColumnType("text");

                    b.Property<string>("BlueThreeNumber")
                        .HasColumnType("text");

                    b.Property<string>("BlueTwoNumber")
                        .HasColumnType("text");

                    b.Property<int?>("CompetitionId")
                        .HasColumnType("integer");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<string>("RedOneNumber")
                        .HasColumnType("text");

                    b.Property<string>("RedThreeNumber")
                        .HasColumnType("text");

                    b.Property<string>("RedTwoNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BlueOneNumber");

                    b.HasIndex("BlueThreeNumber");

                    b.HasIndex("BlueTwoNumber");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("RedOneNumber");

                    b.HasIndex("RedThreeNumber");

                    b.HasIndex("RedTwoNumber");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("WolfnetAPI.Models.Team", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Number");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("CompetitionTeam", b =>
                {
                    b.HasOne("WolfnetAPI.Models.Competition", null)
                        .WithMany()
                        .HasForeignKey("CompetitionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WolfnetAPI.Models.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamsNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WolfnetAPI.Models.Match", b =>
                {
                    b.HasOne("WolfnetAPI.Models.Team", "BlueOne")
                        .WithMany()
                        .HasForeignKey("BlueOneNumber");

                    b.HasOne("WolfnetAPI.Models.Team", "BlueThree")
                        .WithMany()
                        .HasForeignKey("BlueThreeNumber");

                    b.HasOne("WolfnetAPI.Models.Team", "BlueTwo")
                        .WithMany()
                        .HasForeignKey("BlueTwoNumber");

                    b.HasOne("WolfnetAPI.Models.Competition", null)
                        .WithMany("Matches")
                        .HasForeignKey("CompetitionId");

                    b.HasOne("WolfnetAPI.Models.Team", "RedOne")
                        .WithMany()
                        .HasForeignKey("RedOneNumber");

                    b.HasOne("WolfnetAPI.Models.Team", "RedThree")
                        .WithMany()
                        .HasForeignKey("RedThreeNumber");

                    b.HasOne("WolfnetAPI.Models.Team", "RedTwo")
                        .WithMany()
                        .HasForeignKey("RedTwoNumber");

                    b.Navigation("BlueOne");

                    b.Navigation("BlueThree");

                    b.Navigation("BlueTwo");

                    b.Navigation("RedOne");

                    b.Navigation("RedThree");

                    b.Navigation("RedTwo");
                });

            modelBuilder.Entity("WolfnetAPI.Models.Competition", b =>
                {
                    b.Navigation("Matches");
                });
#pragma warning restore 612, 618
        }
    }
}
